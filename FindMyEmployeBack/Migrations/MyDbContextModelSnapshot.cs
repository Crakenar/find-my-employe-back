// <auto-generated />
using System;
using FindMyEmployeBack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindMyEmployeBack.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("FindMyEmployeBack.Model.Company", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int");

                    b.Property<string>("Localisation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("FindMyEmployeBack.Model.Employee", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("HardSkillsid")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LocalisationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("SoftSkills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("HardSkillsid");

                    b.HasIndex("LocalisationId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FindMyEmployeBack.Model.HobbieUri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid?>("Employeeid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Employeeid");

                    b.ToTable("HobbieUri");
                });

            modelBuilder.Entity("FindMyEmployeBack.Types.HardSkillsType", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.ToTable("HardSkillsType");
                });

            modelBuilder.Entity("FindMyEmployeBack.Types.LocalizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("LocalizationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Grenoble"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Toulouse"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Marseille"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Lyon"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Perpignan"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Lille"
                        });
                });

            modelBuilder.Entity("FindMyEmployeBack.Model.Employee", b =>
                {
                    b.HasOne("FindMyEmployeBack.Types.HardSkillsType", "HardSkills")
                        .WithMany()
                        .HasForeignKey("HardSkillsid");

                    b.HasOne("FindMyEmployeBack.Types.LocalizationType", "Localisation")
                        .WithMany()
                        .HasForeignKey("LocalisationId");

                    b.Navigation("HardSkills");

                    b.Navigation("Localisation");
                });

            modelBuilder.Entity("FindMyEmployeBack.Model.HobbieUri", b =>
                {
                    b.HasOne("FindMyEmployeBack.Model.Employee", null)
                        .WithMany("Hobbies")
                        .HasForeignKey("Employeeid");
                });

            modelBuilder.Entity("FindMyEmployeBack.Model.Employee", b =>
                {
                    b.Navigation("Hobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
